upstream docker-frontend {
  server        frontend:80;
}

upstream docker-backend {
  server        backend:3000;
}

server {
    listen              443 ssl;
    server_name         ${FQDN};
    ssl_certificate     /etc/letsencrypt/live/${FQDN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${FQDN}/privkey.pem;

     # Everything else gets shunted over to HTTPS
    # location / {
    #    return 301 https://$http_host$request_uri;
    #}

     # Everything else gets shunted over to HTTPS
    # location /be {
    #    return 301 https://$http_host$request_uri;
    # }

    # https://serverfault.com/questions/379675/nginx-reverse-proxy-url-rewrite
    # https://rtfm.co.ua/en/http-redirects-post-and-get-requests-and-lost-data/
    location /be/ {
        # rewrite /be/(.*) /$1 break;
        proxy_pass  http://docker-backend/;  # make sure to have / at the end!
        proxy_set_header    Host                $http_host;
        proxy_redirect                          off;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    }

    location /api {

        # rewrite /be/(.*) /$1 break;
        proxy_pass  http://docker-backend/api;     # make sure NOT to have / at the end!
        proxy_set_header    Host                $http_host;
        proxy_redirect                          off;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;

        # 12 hours 
        proxy_connect_timeout       43200;
        proxy_send_timeout          43200;
        proxy_read_timeout          43200;
        send_timeout                43200;
    }

    location / {
        proxy_pass  http://docker-frontend;
        proxy_set_header    Host                $http_host;
        proxy_redirect                          off;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
    }

    

}

